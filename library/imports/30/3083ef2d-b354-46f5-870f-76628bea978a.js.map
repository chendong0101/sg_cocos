{"version":3,"sources":["assets\\scripts\\Bullet.js"],"names":["cc","Class","Component","properties","lifeTime","speed","stop","dir","Vec2","RIGHT","power","bomb_anim","g","onBomb","length","onBombFinish","anim","node","getComponent","Animation","animState","play","wrapMode","WrapMode","Normal","destroy","onCollisionEnter","other","self","onBeAttacked","owner","start","v","v2","x","y","update","dt","acos","Math","mag","PI","angle"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAE,CADF;AAERC,IAAAA,KAAK,EAAE,CAFC;AAGRC,IAAAA,IAAI,EAAE,KAHE;AAIRC,IAAAA,GAAG,EAAEP,EAAE,CAACQ,IAAH,CAAQC,KAJL;AAKRC,IAAAA,KAAK,EAAE,CALC;AAMRC,IAAAA,SAAS,EAAE,EANH;AAORC,IAAAA,CAAC,EAAE;AAPK,GAHP;AAaL;AAEAC,EAAAA,MAfK,oBAeI;AACL,QAAI,CAAC,KAAKF,SAAN,IAAmB,KAAKA,SAAL,CAAeG,MAAf,KAA0B,CAAjD,EAAoD;AAChD,WAAKC,YAAL;AACH,KAFD,MAEO;AACH,UAAIC,IAAI,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBlB,EAAE,CAACmB,SAA1B,CAAX;AACA,UAAIC,SAAS,GAAGJ,IAAI,CAACK,IAAL,CAAU,KAAKV,SAAf,CAAhB;AACAS,MAAAA,SAAS,CAACE,QAAV,GAAqBtB,EAAE,CAACuB,QAAH,CAAYC,MAAjC;AACH;AACJ,GAvBI;AAyBLT,EAAAA,YAzBK,0BAyBU;AACX,SAAKE,IAAL,CAAUQ,OAAV;AACH,GA3BI;AA6BLC,EAAAA,gBA7BK,4BA6BaC,KA7Bb,EA6BoBC,IA7BpB,EA6B0B;AAC3B,SAAKf,MAAL;;AACA,QAAIc,KAAK,CAACT,YAAN,CAAmB,cAAnB,CAAJ,EAAwC;AACpCS,MAAAA,KAAK,CAACT,YAAN,CAAmB,cAAnB,EAAmCW,YAAnC,CAAgD,KAAKZ,IAArD,EAA2D,KAAKa,KAAhE;AACH;AACJ,GAlCI;AAoCLC,EAAAA,KApCK,mBAoCI;AACL,SAAKC,CAAL,GAAShC,EAAE,CAACiC,EAAH,CAAM,KAAK5B,KAAL,GAAa,KAAKE,GAAL,CAAS2B,CAA5B,EAA+B,KAAK7B,KAAL,GAAa,KAAKE,GAAL,CAAS4B,CAArD,CAAT;AACH,GAtCI;AAwCLC,EAAAA,MAxCK,kBAwCGC,EAxCH,EAwCO;AACR,SAAKjC,QAAL,IAAiBiC,EAAjB;;AACA,QAAI,KAAK/B,IAAT,EAAe;AACX;AACH;;AACD,QAAIgC,IAAI,GAAGC,IAAI,CAACD,IAAL,CAAU,KAAKN,CAAL,CAAOE,CAAP,GAAW,KAAKF,CAAL,CAAOQ,GAAP,EAArB,CAAX;;AACA,QAAI,KAAKR,CAAL,CAAOG,CAAP,GAAW,CAAf,EAAkB;AACdG,MAAAA,IAAI,GAAG,IAAIC,IAAI,CAACE,EAAT,GAAcH,IAArB;AACH;;AACD,SAAKrB,IAAL,CAAUyB,KAAV,GAAkBJ,IAAI,GAAG,GAAP,GAAaC,IAAI,CAACE,EAApC;;AACA,QAAI,KAAKrC,QAAL,GAAgB,CAApB,EAAuB;AACnB,WAAKS,MAAL;AACA,WAAKP,IAAL,GAAY,IAAZ;AACA;AACH;;AACD,SAAK0B,CAAL,CAAOG,CAAP,IAAY,KAAKvB,CAAL,GAASyB,EAArB;AACA,SAAKpB,IAAL,CAAUiB,CAAV,IAAe,KAAKF,CAAL,CAAOE,CAAP,GAAWG,EAA1B;AACA,SAAKpB,IAAL,CAAUkB,CAAV,IAAe,KAAKH,CAAL,CAAOG,CAAP,GAAWE,EAA1B;AACH;AA1DI,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        lifeTime: 0,\n        speed: 0,\n        stop: false,\n        dir: cc.Vec2.RIGHT,\n        power: 0,\n        bomb_anim: \"\",\n        g: 1500,\n    },\n\n    // onLoad () {},\n\n    onBomb() {\n        if (!this.bomb_anim || this.bomb_anim.length === 0) {\n            this.onBombFinish();\n        } else {\n            var anim = this.node.getComponent(cc.Animation);\n            var animState = anim.play(this.bomb_anim);\n            animState.wrapMode = cc.WrapMode.Normal;\n        }\n    },\n\n    onBombFinish() {\n        this.node.destroy();\n    },\n\n    onCollisionEnter (other, self) {\n        this.onBomb();\n        if (other.getComponent(\"LivingObject\")) {\n            other.getComponent('LivingObject').onBeAttacked(this.node, this.owner);\n        }\n    },\n\n    start () {\n        this.v = cc.v2(this.speed * this.dir.x, this.speed * this.dir.y);\n    },\n\n    update (dt) {\n        this.lifeTime -= dt;\n        if (this.stop) {\n            return;\n        }\n        var acos = Math.acos(this.v.x / this.v.mag());\n        if (this.v.y < 0) {\n            acos = 2 * Math.PI - acos;\n        }\n        this.node.angle = acos * 180 / Math.PI;\n        if (this.lifeTime < 0) {\n            this.onBomb();\n            this.stop = true;\n            return;\n        }\n        this.v.y -= this.g * dt;\n        this.node.x += this.v.x * dt;\n        this.node.y += this.v.y * dt;\n    },\n});\n"]}